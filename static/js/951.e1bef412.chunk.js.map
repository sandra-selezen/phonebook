{"version":3,"file":"static/js/951.e1bef412.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactForm.js","components/Container/CommonContainer.js","redux/selectors.js","components/ContactsList/ContactsList.js","hooks/hooks.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import { Button, FormControl, FormLabel, Input, Icon } from '@chakra-ui/react';\nimport { Formik, Form, Field } from 'formik';\nimport React from 'react';\nimport * as yup from 'yup';\nimport { RiPhoneFill, RiUserFill, RiUserAddFill } from \"react-icons/ri\";\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.string().required(),\n});\n\nconst initialValues = {\n  name: \"\",\n  number: \"\",\n};\n\nexport const ContactForm = () => {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={(values, actions) => {\n        alert(JSON.stringify(values, null, 2));\n        actions.resetForm();\n      }}\n    >\n      {({ handleSubmit }) => (\n        <Form onSubmit={handleSubmit}>\n          <FormControl isRequired>\n            <FormLabel htmlFor='name'><Icon as={RiUserFill} />Name</FormLabel>\n            <Field as={Input} id='name' name='name' type='text' placeholder='Enter contact name' />\n          </FormControl>\n          <FormControl isRequired>\n            <FormLabel htmlFor='number'><Icon as={RiPhoneFill} />Number</FormLabel>\n            <Field as={Input} id='number' name='number' type='tel' placeholder='Enter contact phone number' />\n          </FormControl>\n          <Button type='submit'><Icon as={RiUserAddFill} />Add contact</Button>\n        </Form>\n      )}\n    </Formik>\n  )\n};","import { Container } from '@chakra-ui/react';\nimport React from 'react';\n\nexport const CommonContainer = ({ children }) => {\n  return (\n    <Container width={['container.sm', 'container.md', 'container.lg', 'container.xl']}>\n      {children}\n    </Container>\n  )\n}","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (!filter) {\n      return contacts;\n    }\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(({ name, number }) =>\n        name.toLowerCase().trim().includes(normalizedFilter) ||\n        number.trim().includes(normalizedFilter)\n    );\n    return filteredContacts;\n  }\n);","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { VStack, Text, Box, Button, Flex } from '@chakra-ui/react';\nimport { useError, useFilteredContacts, useIsLoading } from 'hooks/hooks';\nimport React from 'react';\nimport { RiUserUnfollowFill } from 'react-icons/ri';\n\nexport const ContactList = () => {\n\n  const contacts = useFilteredContacts();\n  const isLoading = useIsLoading();\n  const error = useError();\n\n  const dispatch = useDispatch();\n  const onDeleteContact = (contactId) => dispatch(deleteContact(contactId));\n\n  return (\n    <>\n      {!contacts.length && !error && !isLoading && (\n        <Box><Text>Your Phonebook is empty</Text></Box>\n      )}\n      {!error && !isLoading && contacts?.length > 0 && (\n        <VStack spacing='24px'>\n          {contacts.map(contact => (\n            <Flex key={contact.id} alignItems={'center'} gap={'24px'}>\n              <Box>\n                <Text>{contact.name}: {contact.number}</Text>\n              </Box>\n              <Box>\n                <Button title='Delete contact' aria-label='Delete contact' onClick={() => onDeleteContact(contact.id)}><RiUserUnfollowFill /></Button>\n              </Box>\n            </Flex>\n          ))}\n        </VStack>\n      )}\n      \n    </>\n  )\n}","import { useSelector } from 'react-redux';\nimport { selectContacts, selectFilter, selectError, selectFilteredContacts, selectIsLoading } from 'redux/selectors';\n\nexport const useContacts = () => useSelector(selectContacts);\nexport const useFilter = () => useSelector(selectFilter);\nexport const useFilteredContacts = () => useSelector(selectFilteredContacts);\nexport const useIsLoading = () => useSelector(selectIsLoading);\nexport const useError = () => useSelector(selectError);","import { RiUserSearchFill } from \"react-icons/ri\";\nimport { useDispatch } from 'react-redux';\nimport { useFilter } from \"hooks/hooks\";\nimport { setFilter } from 'redux/filterSlice';\nimport { Input, Text } from \"@chakra-ui/react\";\n\nexport const Filter = () => {\n  const filter = useFilter();\n  const dispatch = useDispatch();\n\n  const handleFilter = (event) => {\n    dispatch(setFilter(event.target.value.toLowerCase()));\n  };\n\n  return (\n    <>\n      <Text><RiUserSearchFill /> Find contact by name </Text>\n      <Input value={filter} onChange={handleFilter} autoComplete=\"off\" />\n    </>\n  )\n}","import {\n  Text,\n  Button,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure\n} from '@chakra-ui/react';\nimport { ContactForm } from 'components/ContactsForm/ContactForm';\nimport { ContactList } from 'components/ContactsList/ContactsList';\nimport { CommonContainer } from 'components/Container/CommonContainer';\nimport { Filter } from 'components/Filter/Filter';\nimport React from 'react';\n\nconst Contacts = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <CommonContainer>\n      <Text>Contacts Page</Text>\n      <Button onClick={onOpen}>Add new contact</Button>\n      <Filter />\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Add new contact</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <ContactForm />\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n      <ContactList />\n    </CommonContainer>\n  )\n};\n\nexport default Contacts;"],"names":["schema","yup","shape","name","required","number","initialValues","ContactForm","validationSchema","onSubmit","values","actions","alert","JSON","stringify","resetForm","handleSubmit","isRequired","htmlFor","as","RiUserFill","Input","id","type","placeholder","RiPhoneFill","RiUserAddFill","CommonContainer","children","width","selectIsLoading","state","contacts","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","createSelector","items","normalizedFilter","toLowerCase","trim","includes","ContactList","useSelector","dispatch","useDispatch","length","spacing","map","contact","alignItems","gap","title","onClick","contactId","deleteContact","Filter","I","value","onChange","event","setFilter","target","autoComplete","useDisclosure","isOpen","onOpen","onClose"],"sourceRoot":""}