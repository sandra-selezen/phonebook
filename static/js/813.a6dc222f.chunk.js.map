{"version":3,"file":"static/js/813.a6dc222f.chunk.js","mappings":"8MAGaA,EAAkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChC,OACE,SAAC,IAAD,CAAWC,MAAO,CAAC,eAAgB,eAAgB,eAAgB,gBAAnE,SACGD,GAGN,C,wMCDKE,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,WACnBC,MAAOJ,EAAAA,KAAaI,QAAQD,WAC5BE,SAAUL,EAAAA,KAAaG,aAGnBG,EAAgB,CACpBJ,KAAM,GACNE,MAAO,GACPC,SAAU,IAGCE,EAAa,WAExB,IAAMC,GAAWC,EAAAA,EAAAA,MAcjB,OACE,SAAC,KAAD,CACEH,cAAeA,EACfI,iBAAkBX,EAClBY,SAhBiB,SAACC,EAAQC,GAC5BC,QAAQC,IAAIH,EAAQC,GACpBL,GACEQ,EAAAA,EAAAA,IAAS,CACPd,KAAMU,EAAOV,KACbE,MAAOQ,EAAOR,MACdC,SAAUO,EAAOP,YAGrBQ,EAAQI,WACT,EAGC,UAKE,UAAC,KAAD,YACE,UAAC,KAAD,CAAaC,YAAU,EAAvB,WACE,UAAC,IAAD,CAAWC,QAAQ,OAAnB,WAA0B,SAAC,IAAD,CAAMC,GAAIC,EAAAA,MAApC,gBACA,SAAC,KAAD,CAAOD,GAAIE,EAAAA,EAAOC,GAAG,OAAOrB,KAAK,OAAOsB,KAAK,OAAOC,YAAY,6BAElE,UAAC,KAAD,CAAaP,YAAU,EAAvB,WACE,UAAC,IAAD,CAAWC,QAAQ,QAAnB,WAA2B,SAAC,IAAD,CAAMC,GAAIM,EAAAA,MAArC,YACA,SAAC,KAAD,CAAON,GAAIE,EAAAA,EAAOC,GAAG,QAAQrB,KAAK,QAAQsB,KAAK,QAAQC,YAAY,oBAErE,UAAC,KAAD,CAAaP,YAAU,EAAvB,WACE,UAAC,IAAD,CAAWC,QAAQ,WAAnB,WAA8B,SAAC,IAAD,CAAMC,GAAIO,EAAAA,MAAxC,eACA,SAAC,KAAD,CAAOP,GAAIE,EAAAA,EAAOC,GAAG,WAAWrB,KAAK,WAAWsB,KAAK,WAAWC,YAAY,uBAE9E,UAAC,IAAD,CAAQD,KAAK,SAAb,WAAsB,SAAC,IAAD,CAAMJ,GAAIQ,EAAAA,MAAhC,iBAIP,EC/CD,EARe,WACb,OACE,SAAChC,EAAA,EAAD,WACE,SAACW,EAAD,KAGL,C","sources":["components/Container/CommonContainer.js","components/SignUpForm/SignUpForm.js","pages/SignUp.js"],"sourcesContent":["import { Container } from '@chakra-ui/react';\nimport React from 'react';\n\nexport const CommonContainer = ({ children }) => {\n  return (\n    <Container width={['container.sm', 'container.md', 'container.lg', 'container.xl']}>\n      {children}\n    </Container>\n  )\n}","import { Button, FormControl, FormLabel, Input, Icon } from '@chakra-ui/react';\nimport { Field, Formik, Form } from 'formik';\nimport React from 'react';\nimport * as yup from 'yup';\nimport { RiUserFill, RiMailFill, RiLock2Fill, RiLoginBoxFill } from \"react-icons/ri\";\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().email().required(),\n  password: yup.string().required(),\n});\n\nconst initialValues = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n};\n\nexport const SignUpForm = () => {\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    console.log(values, actions);\n    dispatch(\n      register({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    );\n    actions.resetForm();\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <FormControl isRequired>\n          <FormLabel htmlFor='name'><Icon as={RiUserFill} />Full name</FormLabel>\n          <Field as={Input} id='name' name='name' type='text' placeholder='Enter your full name' />\n        </FormControl>\n        <FormControl isRequired>\n          <FormLabel htmlFor='email'><Icon as={RiMailFill} />Email</FormLabel>\n          <Field as={Input} id='email' name='email' type='email' placeholder='Enter email' />\n        </FormControl>\n        <FormControl isRequired>\n          <FormLabel htmlFor='password'><Icon as={RiLock2Fill} />Password</FormLabel>\n          <Field as={Input} id='password' name='password' type='password' placeholder='Enter password' />\n        </FormControl>\n        <Button type='submit'><Icon as={RiLoginBoxFill} />Sign Up</Button>\n      </Form>\n    </Formik>\n  )\n};","import { CommonContainer } from 'components/Container/CommonContainer';\nimport { SignUpForm } from 'components/SignUpForm/SignUpForm';\nimport React from 'react';\n\nconst SignUp = () => {\n  return (\n    <CommonContainer>\n      <SignUpForm />\n    </CommonContainer>\n  )\n};\n\nexport default SignUp;"],"names":["CommonContainer","children","width","schema","yup","shape","name","required","email","password","initialValues","SignUpForm","dispatch","useDispatch","validationSchema","onSubmit","values","actions","console","log","register","resetForm","isRequired","htmlFor","as","RiUserFill","Input","id","type","placeholder","RiMailFill","RiLock2Fill","RiLoginBoxFill"],"sourceRoot":""}