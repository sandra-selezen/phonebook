{"version":3,"file":"static/js/407.dfa38a16.chunk.js","mappings":"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","sources":["components/Container/CommonContainer.js","components/ContactsForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import { Container } from '@chakra-ui/react';\nimport React from 'react';\n\nexport const CommonContainer = ({ children }) => {\n  return (\n    <Container width={['container.sm', 'container.md', 'container.lg', 'container.xl']}>\n      {children}\n    </Container>\n  )\n}","import { Button, FormControl, FormLabel, Input, Icon } from '@chakra-ui/react';\nimport { Formik, Form, Field } from 'formik';\nimport React from 'react';\nimport * as yup from 'yup';\nimport { RiPhoneFill, RiUserFill, RiUserAddFill } from \"react-icons/ri\";\nimport { useContacts } from 'hooks/hooks';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-hot-toast';\nimport { addContact } from 'redux/operations';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.string().required(),\n});\n\nconst initialValues = {\n  name: \"\",\n  number: \"\",\n};\n\nexport const ContactForm = () => {\n\n  const contacts = useContacts();\n  const dispatch = useDispatch();\n\n  const isReplicated = ({ name, number }) => {\n    const normalizedContactName = name.toLowerCase().trim();\n    const normalizedContactNumber = number.trim();\n    const replicatedContactName = contacts.find(contact => {\n      return (contact.name.toLowerCase().trim() === normalizedContactName && contact.number.trim() === normalizedContactNumber)\n    });\n\n    return Boolean(replicatedContactName);\n  }\n\n  const onAddContact = ({ name, number }, { resetForm }) => {\n    console.log(name, number);\n    isReplicated({ name, number })\n      ? toast('This contact is already in your Phonebook!', { icon: 'ðŸ‘»', })\n      : dispatch(addContact({ name, number }));\n    \n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={onAddContact}\n    >\n      <Form>\n        <FormControl isRequired>\n          <FormLabel htmlFor='name'><Icon as={RiUserFill} />Name</FormLabel>\n          <Field as={Input} id='name' name='name' type='text' placeholder='Enter contact name' />\n        </FormControl>\n        <FormControl isRequired>\n          <FormLabel htmlFor='number'><Icon as={RiPhoneFill} />Number</FormLabel>\n          <Field as={Input} id='number' name='number' type='tel' placeholder='Enter contact phone number' />\n        </FormControl>\n        <Button type='submit'><Icon as={RiUserAddFill} />Add contact</Button>\n      </Form>\n    </Formik>\n  )\n};","import { useDispatch } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/operations';\nimport { VStack, Text, Box, Button, Flex } from '@chakra-ui/react';\nimport { useError, useFilteredContacts, useIsLoading } from 'hooks/hooks';\nimport React, { useEffect } from 'react';\nimport { RiUserUnfollowFill } from 'react-icons/ri';\n\nexport const ContactList = () => {\n\n  const contacts = useFilteredContacts();\n  const isLoading = useIsLoading();\n  const error = useError();\n\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContact = (contactId) => dispatch(deleteContact(contactId));\n\n  return (\n    <>\n      {!contacts.length && !error && !isLoading && (\n        <Box><Text>Your Phonebook is empty</Text></Box>\n      )}\n      {!error && !isLoading && contacts?.length > 0 && (\n        <VStack spacing='24px'>\n          {contacts.map(contact => (\n            <Flex key={contact.id} alignItems={'center'} gap={'24px'}>\n              <Box>\n                <Text>{contact.name}: {contact.number}</Text>\n              </Box>\n              <Box>\n                <Button title='Delete contact' aria-label='Delete contact' onClick={() => onDeleteContact(contact.id)}><RiUserUnfollowFill /></Button>\n              </Box>\n            </Flex>\n          ))}\n        </VStack>\n      )}\n      \n    </>\n  )\n}","import { RiUserSearchFill } from \"react-icons/ri\";\nimport { useDispatch } from 'react-redux';\nimport { useFilter } from \"hooks/hooks\";\nimport { setFilter } from 'redux/filterSlice';\nimport { Input, Text, Icon } from \"@chakra-ui/react\";\n\nexport const Filter = () => {\n  const filter = useFilter();\n  const dispatch = useDispatch();\n\n  const handleFilter = (event) => {\n    dispatch(setFilter(event.target.value.toLowerCase()));\n  };\n\n  return (\n    <>\n      <Text><Icon as={RiUserSearchFill} /> Find contact by name </Text>\n      <Input value={filter} onChange={handleFilter} autoComplete=\"off\" />\n    </>\n  )\n}","import {\n  Text,\n  Button,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure\n} from '@chakra-ui/react';\nimport React from 'react';\nimport { ContactForm } from 'components/ContactsForm/ContactForm';\nimport { ContactList } from 'components/ContactsList/ContactsList';\nimport { CommonContainer } from 'components/Container/CommonContainer';\nimport { Filter } from 'components/Filter/Filter';\n\nconst Contacts = () => {\n  \n  const { isOpen, onOpen, onClose } = useDisclosure();\n  \n  return (\n    <CommonContainer>\n      <Text>Contacts Page</Text>\n      <Button onClick={onOpen}>Add new contact</Button>\n      <Filter />\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Add new contact</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <ContactForm />\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n      <ContactList />\n    </CommonContainer>\n  )\n};\n\nexport default Contacts;"],"names":["CommonContainer","children","width","schema","yup","shape","name","required","number","initialValues","ContactForm","contacts","useContacts","dispatch","useDispatch","validationSchema","onSubmit","resetForm","console","log","normalizedContactName","toLowerCase","trim","normalizedContactNumber","replicatedContactName","find","contact","Boolean","isReplicated","addContact","toast","icon","isRequired","htmlFor","as","RiUserFill","Input","id","type","placeholder","RiPhoneFill","RiUserAddFill","ContactList","useFilteredContacts","isLoading","useIsLoading","error","useError","useEffect","fetchContacts","length","spacing","map","alignItems","gap","title","onClick","contactId","deleteContact","Filter","filter","useFilter","RiUserSearchFill","I","value","onChange","event","setFilter","target","autoComplete","useDisclosure","isOpen","onOpen","onClose"],"sourceRoot":""}