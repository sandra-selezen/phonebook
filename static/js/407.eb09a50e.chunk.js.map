{"version":3,"file":"static/js/407.eb09a50e.chunk.js","mappings":"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","sources":["components/Container/CommonContainer.js","components/ContactsForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import { Container } from '@chakra-ui/react';\nimport React from 'react';\n\nexport const CommonContainer = ({ children }) => {\n  return (\n    <Container\n      maxWidth={['sm', 'md', 'lg', 'xl', '2xl']}\n      position={'absolute'}\n      top={'50%'}\n      left={'50%'}\n      transform='translate(-50%, -50%)'\n      paddingTop={'40px'}\n      paddingBottom={'40px'}\n      sx={{\n        backgroundColor: 'hsla(0, 0%, 10%, 0.5)',\n        // backdropFilter: 'blur(8px)',\n        border: '2px solid white',\n        borderRadius: '1rem',\n      }}\n    >\n      {children}\n    </Container>\n  )\n}","import { Button, FormControl, FormLabel, Input, Icon } from '@chakra-ui/react';\nimport { Formik, Form, Field } from 'formik';\nimport React from 'react';\nimport * as yup from 'yup';\nimport { RiPhoneFill, RiUserFill, RiUserAddFill } from \"react-icons/ri\";\nimport { useContacts } from 'hooks/hooks';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-hot-toast';\nimport { addContact } from 'redux/operations';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.string().required(),\n});\n\nconst initialValues = {\n  name: \"\",\n  number: \"\",\n};\n\nexport const ContactForm = () => {\n\n  const contacts = useContacts();\n  const dispatch = useDispatch();\n\n  const isReplicated = ({ name, number }) => {\n    const normalizedContactName = name.toLowerCase().trim();\n    const normalizedContactNumber = number.trim();\n    const replicatedContactName = contacts.find(contact => {\n      return (contact.name.toLowerCase().trim() === normalizedContactName && contact.number.trim() === normalizedContactNumber)\n    });\n\n    return Boolean(replicatedContactName);\n  }\n\n  const onAddContact = ({ name, number }, { resetForm }) => {\n    console.log(name, number);\n    isReplicated({ name, number })\n      ? toast('This contact is already in your Phonebook!', { icon: 'ðŸ‘»', })\n      : dispatch(addContact({ name, number }));\n    \n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={onAddContact}\n    >\n      <Form>\n        <FormControl isRequired marginBottom={'12px'}>\n          <FormLabel htmlFor='name'><Icon as={RiUserFill} mr={'8px'} />Name</FormLabel>\n          <Field as={Input} id='name' name='name' type='text' placeholder='Enter contact name' />\n        </FormControl>\n        <FormControl isRequired marginBottom={'12px'}>\n          <FormLabel htmlFor='number'><Icon as={RiPhoneFill} mr={'8px'} />Number</FormLabel>\n          <Field as={Input} id='number' name='number' type='tel' placeholder='Enter contact phone number' />\n        </FormControl>\n        <Button type='submit'><Icon as={RiUserAddFill} />Add contact</Button>\n      </Form>\n    </Formik>\n  )\n};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport {\n  VStack,\n  StackDivider,\n  Text,\n  Box,\n  Button,\n  Spinner,\n  Flex\n} from '@chakra-ui/react';\nimport React from 'react';\nimport { RiUserUnfollowFill, RiUserSettingsFill } from 'react-icons/ri';\n\nexport const ContactList = ({ contacts, isLoading, error }) => {\n\n  const dispatch = useDispatch();\n  const onDeleteContact = (contactId) => dispatch(deleteContact(contactId));\n\n  return (\n    <>\n      {isLoading && <Spinner />}\n      {!error && !isLoading && contacts?.length > 0 && (\n        <VStack\n          align='stretch'\n          maxHeight={'340px'}\n          overflow={'scroll'}\n          spacing={4}\n          divider={<StackDivider borderColor={'white'} />}>\n          {contacts.map(contact => (\n            <Flex key={contact.id} justifyContent={'space-between'} alignItems={'center'}>\n              <Box>\n                <Text>{contact.name}: {contact.number}</Text>\n              </Box>\n              <Box>\n                <Button title='Edit contact' aria-label='Edit contact' mr={'12px'}><RiUserSettingsFill /></Button>\n                <Button title='Delete contact' aria-label='Delete contact' onClick={() => onDeleteContact(contact.id)}><RiUserUnfollowFill /></Button>\n              </Box>\n            </Flex>\n          ))}\n        </VStack>\n      )}\n    </>\n  )\n}","import { RiUserSearchFill } from \"react-icons/ri\";\nimport { useDispatch } from 'react-redux';\nimport { useFilter } from \"hooks/hooks\";\nimport { setFilter } from 'redux/filterSlice';\nimport { Input, FormLabel, Icon, FormControl } from \"@chakra-ui/react\";\n\nexport const Filter = () => {\n  const filter = useFilter();\n  const dispatch = useDispatch();\n\n  const handleFilter = (event) => {\n    dispatch(setFilter(event.target.value.toLowerCase()));\n  };\n\n  return (\n    <FormControl marginBottom={'24px'}>\n      <FormLabel><Icon as={RiUserSearchFill} mr={'8px'} /> Find contact by name </FormLabel>\n      <Input value={filter} onChange={handleFilter} autoComplete=\"off\" />\n    </FormControl>\n  )\n}","import {\n  VisuallyHidden,\n  Heading,\n  Box,\n  Text,\n  Button,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Stack\n} from '@chakra-ui/react';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport { useError, useFilteredContacts, useIsLoading } from 'hooks/hooks';\n\nimport { ContactForm } from 'components/ContactsForm/ContactForm';\nimport { ContactList } from 'components/ContactsList/ContactsList';\nimport { CommonContainer } from 'components/Container/CommonContainer';\nimport { Filter } from 'components/Filter/Filter';\n\nconst Contacts = () => {\n\n  const contacts = useFilteredContacts();\n  const isLoading = useIsLoading();\n  const error = useError();\n  const contactsCount = contacts.length;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  \n  const { isOpen, onOpen, onClose } = useDisclosure();\n  \n  return (\n    <CommonContainer>\n      <VisuallyHidden><Heading>Contacts Page</Heading></VisuallyHidden>\n      <Stack\n        direction={['column', 'column', 'row', 'row']}\n        justifyContent={'space-between'}\n        alignItems={'center'}\n        marginBottom={'12px'}\n      >\n        {!contacts.length && !error && !isLoading && (\n          <Box><Text fontWeight={'700'}>Your Phonebook is empty ðŸ¥º</Text></Box>\n        )}\n        {contactsCount > 0 && (\n          <Box><Text fontWeight={'700'}>You have {contactsCount === 1 ? `${contactsCount} contact` : `${contactsCount} contacts`} in the Phonebook ðŸ˜€</Text></Box>\n        )}\n        <Box><Button onClick={onOpen}>Add new contact</Button></Box>\n      </Stack>\n      \n      <Filter />\n      <Modal isOpen={isOpen} onClose={onClose} variant='sunset'>\n        <ModalOverlay\n          bg='none'\n          backdropFilter='auto'\n          backdropInvert='20%'\n          backdropBlur='2px'\n        />\n        <ModalContent>\n          <ModalHeader>Add new contact</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <ContactForm />\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n      <ContactList contacts={contacts} isLoading={isLoading} error={error} />\n    </CommonContainer>\n  )\n};\n\nexport default Contacts;"],"names":["CommonContainer","children","maxWidth","position","top","left","transform","paddingTop","paddingBottom","sx","backgroundColor","border","borderRadius","schema","yup","shape","name","required","number","initialValues","ContactForm","contacts","useContacts","dispatch","useDispatch","validationSchema","onSubmit","resetForm","console","log","normalizedContactName","toLowerCase","trim","normalizedContactNumber","replicatedContactName","find","contact","Boolean","isReplicated","addContact","toast","icon","isRequired","marginBottom","htmlFor","as","RiUserFill","mr","Input","id","type","placeholder","RiPhoneFill","RiUserAddFill","ContactList","isLoading","error","length","align","maxHeight","overflow","spacing","divider","borderColor","map","justifyContent","alignItems","title","onClick","contactId","deleteContact","Filter","filter","useFilter","RiUserSearchFill","I","value","onChange","event","setFilter","target","autoComplete","useFilteredContacts","useIsLoading","useError","contactsCount","useEffect","fetchContacts","useDisclosure","isOpen","onOpen","onClose","direction","fontWeight","variant","bg","backdropFilter","backdropInvert","backdropBlur"],"sourceRoot":""}