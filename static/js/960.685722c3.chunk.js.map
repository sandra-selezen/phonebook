{"version":3,"file":"static/js/960.685722c3.chunk.js","mappings":"8MAGaA,EAAkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChC,OACE,SAAC,IAAD,CAAWC,MAAO,CAAC,eAAgB,eAAgB,eAAgB,gBAAnE,SACGD,GAGN,C,wMCDKE,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,QAAQC,WAC5BC,SAAUJ,EAAAA,KAAaG,aAGnBE,EAAgB,CACpBH,MAAO,GACPE,SAAU,IAGCE,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAYjB,OACE,SAAC,KAAD,CACEH,cAAeA,EACfI,iBAAkBV,EAClBW,SAdiB,SAACC,EAAQC,GAC5BL,GACEM,EAAAA,EAAAA,IAAM,CACJX,MAAOS,EAAOT,MACdE,SAAUO,EAAOP,YAGrBQ,EAAQE,WACT,EAGC,UAKE,UAAC,KAAD,YACE,UAAC,KAAD,CAAaC,YAAU,EAAvB,WACE,UAAC,IAAD,CAAWC,QAAQ,QAAnB,WAA2B,SAAC,IAAD,CAAMC,GAAIC,EAAAA,MAArC,YACA,SAAC,KAAD,CAAOD,GAAIE,EAAAA,EAAOC,GAAG,QAAQC,KAAK,QAAQC,KAAK,QAAQC,YAAY,oBAErE,UAAC,KAAD,CAAaR,YAAU,EAAvB,WACE,UAAC,IAAD,CAAWC,QAAQ,WAAnB,WAA8B,SAAC,IAAD,CAAMC,GAAIO,EAAAA,MAAxC,eACA,SAAC,KAAD,CAAOP,GAAIE,EAAAA,EAAOC,GAAG,WAAWC,KAAK,WAAWC,KAAK,WAAWC,YAAY,uBAE9E,UAAC,IAAD,CAAQD,KAAK,SAAb,WAAsB,SAAC,IAAD,CAAML,GAAIQ,EAAAA,MAAhC,eAIP,ECtCD,EARc,WACZ,OACE,SAAC7B,EAAA,EAAD,WACE,SAACU,EAAD,KAGL,C","sources":["components/Container/CommonContainer.js","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["import { Container } from '@chakra-ui/react';\nimport React from 'react';\n\nexport const CommonContainer = ({ children }) => {\n  return (\n    <Container width={['container.sm', 'container.md', 'container.lg', 'container.xl']}>\n      {children}\n    </Container>\n  )\n}","import { Button, FormControl, FormLabel, Input, Icon } from '@chakra-ui/react';\nimport { Field, Formik, Form } from 'formik';\nimport React from 'react';\nimport * as yup from 'yup';\nimport { RiMailFill, RiLock2Fill, RiLoginBoxFill } from \"react-icons/ri\";\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nconst schema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().required(),\n})\n\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n}\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    dispatch(\n      logIn({\n        email: values.email,\n        password: values.password,\n      })\n    );\n    actions.resetForm();\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <FormControl isRequired>\n          <FormLabel htmlFor='email'><Icon as={RiMailFill} />Email</FormLabel>\n          <Field as={Input} id='email' name='email' type='email' placeholder='Enter email' />\n        </FormControl>\n        <FormControl isRequired>\n          <FormLabel htmlFor='password'><Icon as={RiLock2Fill} />Password</FormLabel>\n          <Field as={Input} id='password' name='password' type='password' placeholder='Enter password' />\n        </FormControl>\n        <Button type='submit'><Icon as={RiLoginBoxFill} />Login</Button>\n      </Form>\n    </Formik>\n  )\n}","import { CommonContainer } from 'components/Container/CommonContainer';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\nimport React from 'react';\n\nconst Login = () => {\n  return (\n    <CommonContainer>\n      <LoginForm />\n    </CommonContainer>\n  )\n};\n\nexport default Login;"],"names":["CommonContainer","children","width","schema","yup","shape","email","required","password","initialValues","LoginForm","dispatch","useDispatch","validationSchema","onSubmit","values","actions","logIn","resetForm","isRequired","htmlFor","as","RiMailFill","Input","id","name","type","placeholder","RiLock2Fill","RiLoginBoxFill"],"sourceRoot":""}